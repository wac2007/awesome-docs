---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
# apiVersion: backstage.io/v1alpha1
# kind: System
# metadata:
#   name: examples
# spec:
#   owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: example-docs-website
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
# apiVersion: backstage.io/v1alpha1
# kind: Component
# metadata:
#   name: example-website
#   annotations:
#     # backstage.io/techdocs-ref: dir:.
#     backstage.io/techdocs-ref: url:https://github.com/wac2007/backstage-doc
# spec:
#   type: website
#   lifecycle: experimental
#   owner: guests
#   system: examples
# providesApis: [example-grpc-api]
---
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-web-docs
  annotations:
    backstage.io/techdocs-ref: dir:.
    # backstage.io/techdocs-ref: url:https://github.com/wac2007/backstage-doc
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: example-docs-website
  # providesApis: []
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
# apiVersion: backstage.io/v1alpha1
# kind: API
# metadata:
#   name: example-grpc-api
# spec:
#   type: grpc
#   lifecycle: experimental
#   owner: guests
#   system: examples
#   definition: |
#     syntax = "proto3";

#     service Exampler {
#       rpc Example (ExampleMessage) returns (ExampleMessage) {};
#     }

#     message ExampleMessage {
#       string example = 1;
#     };
